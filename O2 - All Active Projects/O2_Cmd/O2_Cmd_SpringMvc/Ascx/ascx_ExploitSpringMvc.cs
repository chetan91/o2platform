// This file is part of the OWASP O2 Platform (http://www.owasp.org/index.php/OWASP_O2_Platform) and is released under the Apache 2.0 License (http://www.apache.org/licenses/LICENSE-2.0)
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using O2.DotNetWrappers.DotNet;
using O2.DotNetWrappers.Windows;

namespace O2.Cmd.SpringMvc.Ascx
{
    public partial class ascx_ExploitSpringMvc : UserControl
    {
        public ascx_ExploitSpringMvc()
        {
            InitializeComponent();
        }


        /*private void btLoadTestData_Click(object sender, EventArgs e)
        {
            springMvcMappings.loadMappedControllers(@"C:\O2\_tempDir\tmp6BB_JythonTargetFiles\tmp88B.tmp.SpringMvcControllers");
            O2Thread.mtaThread(
                () =>
                    {
                        Processes.Sleep(1000); // so we load the home page first
                        this.invokeOnThread(
                            () =>
                                {
                                    tbUrlToApplicationRoot.Text = @"http://localhost:8080/petclinic";
                                    cbSubmitMethod.Text = "GET";
                                    calculateRequestDataAndsendRequest();
                                });
                    });
        }*/

        private void ascx_ExploitSpringMvc_Load(object sender, EventArgs e)
        {
            onLoad();
        }

        private void btOpenUrl_Click(object sender, EventArgs e)
        {
            calculateRequestDataAndsendRequest();
        }        

        private void springMvcMappings__onTreeViewSelect(TreeView treeView)
        {
            onSpringMvcMappingsTreeViewSelect(treeView,cbOpenPageWhenControllerIsSelected.Checked);
        }

        private void tbUrlToApplicationRoot_TextChanged(object sender, EventArgs e)
        {
            tbUrlToSubmit.Text = tbUrlToApplicationRoot.Text;
            urlOfWebApplicationRoot = tbUrlToApplicationRoot.Text;
        }

        private void tbUrlToSubmit_TextChanged(object sender, EventArgs e)
        {
            //tbUrlToSubmit.Text;
        }

        private void tbUrlToSubmit_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                cbSubmitMethod.Text = "GET";
                dataGridViewWithParameters.Rows.Clear();
                calculateRequestDataAndsendRequest();
            }
        }

        private void tbUrlToApplicationRoot_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                dataGridViewWithParameters.Rows.Clear();
                cbSubmitMethod.Text = "GET";
                tbUrlToApplicationRoot_TextChanged(null, null);
                calculateRequestDataAndsendRequest();
            }
        }

        private void lbAutoBindedData_MouseDown(object sender, MouseEventArgs e)
        {
            DoDragDrop(lbAutoBindedData.Text, DragDropEffects.Copy);
        }

        private void webBrowser_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
        {
            onWebBrowserDocumentCompleted(e.Url);
        }

        private void dataGridViewWithParameters_DragDrop(object sender, DragEventArgs e)
        {
            handleDataGridViewDrop(e);
        }

        private void dataGridViewWithParameters_DragEnter(object sender, DragEventArgs e)
        {
            Dnd.setEffect(e);
        }

        private void cbLoadParametersOnPageLoad_CheckedChanged(object sender, EventArgs e)
        {
            cbOpenPageWhenControllerIsSelected.Checked = false;
        }

        private void cbOpenPageWhenControllerIsSelected_CheckedChanged(object sender, EventArgs e)
        {
            cbLoadParametersOnPageLoad.Checked = false;
        }

                  
    }
}
